{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","personObject","post","filteredPerson","delete","id","personToBeRemoved","put","Filter","props","onChange","handleFilterInputChange","PersonForm","onSubmit","addPerson","value","newName","handleNameInputChange","newNumber","handleNumberInputChange","type","Persons","persons","filterName","deletePerson","filter","person","name","toLowerCase","includes","map","number","onClick","SuccessNotification","message","className","ErrorNotification","App","useState","setPersons","setNewName","setNewNumber","setFilterName","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","personService","then","response","data","window","confirm","setTimeout","catch","error","event","target","some","preventDefault","find","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0f380df.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'https://ejs-fullstackopen2020-part3.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = personObject => {\r\n    return axios\r\n    .post(baseUrl, personObject)\r\n}\r\n\r\nconst remove = filteredPerson => {\r\n    return axios\r\n    .delete(baseUrl + `${filteredPerson.id}`)\r\n}\r\n\r\nconst replace = (personToBeRemoved, personObject) => {\r\n    return axios\r\n    .put(baseUrl + `/${personToBeRemoved.id}`, personObject)\r\n}\r\n\r\nexport default { getAll, create, remove, replace }","import React, { useEffect, useState } from 'react'\nimport personService from './services/persons'\nimport './App.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n    .then(response => {\n      setPersons(response.data)\n    })\n  }, [])\n  \n  const addPerson = (event) => {\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.some(person => person.name === newName && typeof person.id !== \"undefined\")) {\n      event.preventDefault()\n      const personToBeRemoved = persons.find(person => person.name === newName)\n      if(window.confirm(`${newName} is already in the phone book. Overwrite?`)) {\n        personService.replace(personToBeRemoved, personObject).then(response =>{\n          setPersons(persons.map(person => person.name === personObject.name ? personObject : person ))\n          setNewName('')\n          setNewNumber('')\n          setSuccessMessage(`${personObject.name}'s number updated successfully`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        }).catch(error => {\n          setErrorMessage(`Error! ${personObject.name} has already been removed from the server.`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n      }\n      else {\n        setNewName('')\n        setNewNumber('')\n      }\n    }\n    else if (persons.some(person => person.name === newName)) {\n      event.preventDefault()\n      const person = persons.find(person => person.name === newName)\n      setErrorMessage(`Please refresh the page to edit ${person.name}'s number`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n    else {\n      event.preventDefault()\n      personService.create(personObject)\n      .then(response => {\n        setPersons(persons.concat(personObject))\n        setNewName('')\n        setNewNumber('')\n        setSuccessMessage(`${personObject.name} was added to the phone book`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const deletePerson = ({filteredPerson, persons}) => {\n    if (typeof filteredPerson.id !== \"undefined\") {\n      if(window.confirm(`Remove ${filteredPerson.name} from the phone book?`)) {\n      personService.remove(filteredPerson)\n      .then(response => {\n        setPersons(persons.filter(person => person.name !== filteredPerson.name))\n        setSuccessMessage(`${filteredPerson.name} was deleted successfully`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(`Error! ${filteredPerson.name} has already been removed from the server.`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      }\n    }\n    else {\n      if(window.confirm(`Remove ${filteredPerson.name} from the phone book?`)) {\n        setErrorMessage(`${filteredPerson.name} was not yet added to the server! Refresh the page if you wish to delete the entry`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n    }\n  }\n\n  const handleNameInputChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberInputChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  \n  const handleFilterInputChange = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phone book</h2>\n\n      <SuccessNotification message={successMessage}/>\n      <ErrorNotification message={errorMessage}/>\n\n      <Filter handleFilterInputChange={handleFilterInputChange}/>\n\n      <h2>New Entry</h2>\n\n      <PersonForm addPerson={addPerson}\n                  deletePerson={deletePerson} \n                  newName={newName} \n                  handleNameInputChange={handleNameInputChange}\n                  newNumber={newNumber}\n                  handleNumberInputChange={handleNumberInputChange}\n      />\n\n      <h2>Numbers</h2>\n      \n      <Persons persons={persons}\n               filterName={filterName}\n               deletePerson={deletePerson}\n               />\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <p>Filter shown: <input onChange={props.handleFilterInputChange}/></p>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n  <form onSubmit={props.addPerson}>\n    <div>\n      <p>Name: <input value = {props.newName} onChange = {props.handleNameInputChange}/></p>\n      <p>Number: <input value = {props.newNumber} onChange = {props.handleNumberInputChange}/></p>\n    </div>\n    <div>\n      <button type=\"submit\">Add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Persons = ({persons, filterName, deletePerson}) => {\n  return (\n    <div>\n     {persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase())).map(filteredPerson =>\n       <div key = {filteredPerson.number}>\n          <p>{filteredPerson.name}: {filteredPerson.number} <button onClick={()=>deletePerson({filteredPerson, persons})}>delete</button></p>\n       </div> \n      )}\n    </div>\n  )\n}\n\nconst SuccessNotification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}